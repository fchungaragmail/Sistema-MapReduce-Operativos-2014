Interacciones MaRTA-Job
************************

***********************************************
-->Job le pasa a MaRTA su archivo a procesar (pueden ser muchos, en este caso seran varios envios)
*comando: "archivoAProcesar rutaDeArchivo soportaCombiner"
*data: NADA
// La rutaDeArchivo puede ser por ejemplo: "/user/juan/datos/temperatura2012.txt/" 
// soportaCombiner debe ser 1 en caso de verdadero, o 0
// Ej del comando: archivoAProcesar /user/juan/datos/temperatura2012.txt/ 1
************************************************************************************************************************************************************************************************
-->MaRTA le dice al Job que haga una rutina de mapping
*comando: "mapFile nombreArchivo" 
*data:      direccionNodo puertoEscucha nroDeBloque rutaArchivoTemporal
		...direccionNodo puertoEscucha nroDeBloque rutaArchivoTemporal...
		...direccionNodo puertoEscucha nroDeBloque rutaArchivoTemporal...

// La ruta del archivo temporal siempre sera el nombreDelArchivo y se le concatenara los hh:mm:ss:mmmm devuelto por la funcion temporal.h que nos da la catedra
// se pondra un guion como separador, de esta manera se podra distinguir entre la ruta del archivo y el hh:mm:ss:mmmm agregado, de esta manera se va a poder 
// obtener la ruta del archivo si hiciera falta--> por ejemplo "/user/juan/datos/temperatura2012.txt/-23:43:45:2345"
// Ej del comando: mapFile  127.0.0.1 9999 12345 /user/juan/datos/temperatura2012.txt/-23:43:45:2345
************************************************************************************************************************************************************************************************
-->Job responde a Marta con el resultado de la operacion de map
*comando : "mapFileResponse rutaArchivoTemporal Respuesta"
*data:NADA
// la "Respuesta" debe ser 0 si es false o 1 si es true
// Ej del comando: mapFileResponse /user/juan/datos/temperatura2012.txt/-23:43:45:2345 1
************************************************************************************************************************************************************************************************
-->MaRTA le indica al Job en que archivos aplicar Reduce // Para que sea mas legible usos los sinonimos:  "RutaArchivoTemporal" == "RAT" ; "NroDeNodo(Remoto/Local)" == " #Nodo(Remoto/Local)" ;

*comando: "reduceFileSinCombiner NombreArchTempFinal "
*data:	    NodoLocal  CantDeArchEnNodoLocalAProcesar RAT1 RAT2-...etc...-
                ...NodoRemoto1 CantDeArchEnNodoRemotoAProcesar RTA1 RAT2 RAT3 -etc... 
		...NodoRemoto2-...."
		
//"CantDeArchEnNodoLocalAProcesar" y "CantDeArchEnNodoRemotoAProcesar" seran un int16_t
//nroDeNodoLocal sera el nodo donde se guardaran el resultado final de aplicar las rutinas de reduce

*******************************************
El reduceConCombiner se hara en 2 pedidos, en el 1er pedido se envian TODOS los pedidos para hacer los reduces locales y luego el Job le respondera.
Una vez q el Job responde entonces MaRTA enviara el ultimo pedido para hacer el reduce final.

1er pedido
***********

*comando: "reduceFileConCombiner-Pedido1 pathArchivo"
*data:      Nodo1 nombreArchTemp1 CantDeArchEnNodoAProcesar RAT1 RAT2 -etc...-
                ...Nodo2 nombreArchTemp2 CantDeArchEnNodoAProcesar RTA1 RAT2 -etc... 
		...Nodo3 ....

2do pedido
***********
*comando: "reduceFileConCombiner-Pedido2 nombreArchTempFinal"
*data:      NodoLocal nombreArchTempLocal 
                ...NodoRemoto1 nombreArchTemp1... 
		...NodoRemoto2 nombreArchTemp2...
		...etc...

// NombreArchTemp es el nombre del archivo donde el Nodo guardara el resultado de su rutina de Reduce, luego los resultados que tiene cada nodo de su rutina de reduce deberan ser
// reducidos de vuelta o concatenados (no lei bien esta parta la verdad) en #NodoLocal

//"CantDeArchEnNodoLocalAProcesar" y "CantDeArchEnNodoRemotoAProcesar" seran un int16_t

//MaRTA tendra dos formas de ejecutar este comando dependiendo si el Job soporta combiner o no, de cualquiera de las formas que MaRTA lo envie, el Job tendra que saber que 
//tipo de estructura del mensaje debe esperar, ya que el mismo Job sabe si soporta combiner o no.
************************************************************************************************************************************************************************************************
-->Job responde a Marta con el resultado de la operacion de reduce
*comando:"reduceFileResponse nombreArch Respuesta"-----> "reduceFileResponse" en realidad sera "reduceFileConCombiner-Pedido1","reduceFileConCombiner-Pedido2","reduceFileSinCombiner"
*data:VACIO

// Debe devolver el "NombreArchTemp" asi MaRTA sabe a que pedido de reduce corresponde, ya que seguramente envio varios.
// la "Respuesta" debe ser 0 si es false o 1 si es true
// Ej de comando: reduceFileResponse /user/juan/datos/temperatura2012.txt/  0

************************************************************************************************************************************************************************************************